service: simple

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: us-east-1
  #iamRoleStatements:
  #- Effect: Allow
  #  Action:
  #    - dynamodb:Scan
  #    - dynamodb:Query
  #    - dynamodb:GetItem
  #   - dynamodb:PutItem
  #    - dynamodb:UpdateItem
  #    - dynamodb:DeleteItem
  #  Resource: "arn:aws:dynamodb:us-east-1:948229154968:table/BlogTable"

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
  createArticle:
    handler: articles/create.handler
    events:
      - http:
          path: articles
          method: post
          cors: true
  readOneArticle:
    handler: articles/read.handler
    events:
      - http:
          path: articles/{id}
          method: get
          cors: true
  updateArticle:
    handler: articles/update.handler
    events:
      - http:
          path: articles
          method: put
          cors: true
  deleteArticle:
    handler: articles/delete.handler
    events:
      - http:
          path: articles
          method: delete
          cors: true
  readAllArticles:
    handler: articles/readAll.handler
    events:
      - http:
          path: articles
          method: get
          cors: true

# you can add CloudFormation resource templates here
resources:
  Resources:
    BlogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: BlogTable
        AttributeDefinitions:
          - AttributeName: article_id
            AttributeType: S
        KeySchema:
          - AttributeName: article_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1